(()=>{"use strict";function t(t,e=2.2){return t.map((t=>{let r=t/255;return r=r>.04045?Math.pow((r+.055)/1.055,e):r/12.92,100*r}))}function e(t,e=2.2){return t.map((t=>{let r=t/100;return r=r>.0031308?1.055*Math.pow(r,1/e)-.055:12.92*r,~~(255*r)}))}function r(e,r=2.2){return function(t){let e=[95.047*t[0],100*t[1],108.883*t[2]];return e=e.map((t=>t>.008856?Math.pow(t,1/3):7.787*t+16/116)),[116*e[1]-16,500*(e[0]-e[1]),200*(e[1]-e[2])]}(function(e,r=2.2){const o=t(e,r);return[.4124*o[0]+.3576*o[1]+.1805*o[2],.2126*o[0]+.7152*o[1]+.0722*o[2],.0193*o[0]+.1192*o[1]+.9505*o[2]]}(e,r))}var o;!function(t){t.Indexed2Bit="2-bit (4 color) Indexed",t.Indexed4Bit="4-bit (16 color) Indexed",t.Mono="Monochrome",t.Duo="Dual tone",t.RGB="RGB",t.RGBI="4-bit (16 color) RGBI",t.Auto="Optimized (Auto)",t.Other="Other",t.Generated="AUTOGENERATED PALETTE",t.Hidden="HIDDEN PALETTE"}(o||(o={}));const a=o;var n;!function(t){t[t.Indexed=0]="Indexed",t[t.Mono=1]="Mono",t[t.RGB=2]="RGB",t[t.Mixer=3]="Mixer",t[t.Auto=4]="Auto"}(n||(n={}));const s=n,l=class{static getSize(t){switch(t.type){case s.Indexed:return t.data.length/3;case s.Mono:return t.data[0];case s.RGB:return t.data[0]*t.data[1]*t.data[2];case s.Mixer:{const e=(t.data.length-4)/5;let r=1;for(let o=0;o<e;o++)r*=t.data[4+5*o];return r}case s.Auto:return t.data[0];default:return 0}}static getColor(t,e){if(e<0||e>=this.getSize(t))throw new Error(`Color index ${e} out of bounds`);switch(t.type){case s.Indexed:return t.data.slice(3*e,3*e+3);case s.Mono:return t.data.slice(2,5).map((r=>{const o=r*t.data[1];return o+e*~~((r-o)/(t.data[0]-1))}));case s.Mixer:return this.getMixerColor(t,e);case s.RGB:{const r=e%t.data[2],o=~~(e/t.data[2])%t.data[1];return[~~(e/(t.data[2]*t.data[1])),o,r].map(((e,r)=>e*~~(255/(t.data[r]-1))))}case s.Auto:default:throw new Error("Invalid or Auto palette type")}}static getColors(t){return Array.from({length:this.getSize(t)},((e,r)=>this.getColor(t,r)))}static transform(t,e){const r=this.getColors(t).map((t=>e(t)));return{name:`${t.name} :: ${e.name}`,type:s.Indexed,group:a.Generated,data:r.reduce(((t,e)=>t.concat(e)))}}static getMixerColor(t,e){const r=1===t.data.slice(0,4)[1],o=(t.data.length-4)/5,a=r?[255,255,255]:[0,0,0],n=e=>t.data[4+5*e],s=e=>t.data[5+5*e],l=e=>t.data.slice(6+5*e,9+5*e),c=t=>{let r=e;for(let e=0;e<t;e++)r=~~(r/n(e));return r%n(t)};for(let t=0;t<o;t++)l(t).forEach(((e,o)=>{r&&(e=255-e);const l=e*s(t),d=e-l,i=l+c(t)*~~(d/(n(t)-1));a[o]+=r?-i:i,a[o]<0&&(a[o]=0)}));return a}},c=(t,e)=>(t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])+(t[2]-e[2])*(t[2]-e[2]);function d(t,e){return c(t,e)}function i(t,r){return d(e(t),e(r))}const u={};function f(t,e){const o=t[0]+(t[1]<<8)+(t[2]<<16),a=e[0]+(e[1]<<8)+(e[2]<<16);let n=u[o];n||(n=r(t),u[o]=n);let s=u[a];return s||(s=r(e),u[a]=s),c(n,s)}function h(t,e,r){let o=[],a=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const s=r(t,e[n]);s<=a&&(o=e[n],a=s)}return o}const m={id:"ProcBasic",name:"Basic (no dithering)",procFn:(t,e,r,o,a)=>{const n=4*t.width,s=t.width*t.height*4,c=l.getColors(e);for(let e=0;e<s;e+=4){const o=h(Array.from(t.data.slice(e,e+4)),c,r);for(let r=0;r<3;r++)t.data[e+r]=o[r];e%(8*n)==0&&a&&a(e,s,t)}return t},maxAllowedPaletteSize:65536,supports:{threads:!1,gamma:!1},complexity:t=>t},g=[0,48,12,60,3,51,15,63,32,16,44,28,35,19,47,31,8,56,4,52,11,59,7,55,40,24,36,20,43,27,39,23,2,50,14,62,1,49,13,61,34,18,46,30,33,17,45,29,10,58,6,54,9,57,5,53,42,26,38,22,41,25,37,21].map((t=>t/64));function p(t,e,r,o,a){return a(t,e)+r*((o<0?-o:o)+.5)}function w(t=!0){return(e,r,o,a,n)=>{const s=e.width*e.height*4,c=4*e.width,d=l.getColors(r),i={};for(let t=0;t<d.length;t++)for(let e=t;e<d.length;e++)i[t*d.length+e]=.1*o(d[t],d[e]);const u=[0,0,0];let f,h,m,w;for(let r=0;r<s;r+=4){f=Array.from(e.data.slice(r,r+3));const a=g[r%c/4%8+~~(r/c)%8*8];w={color1:[0,0,0],color2:f,ratio:.33};let l=Number.MAX_VALUE;for(let e=0;e<d.length;e++)for(let r=e;r<d.length;r++)if(h=d[e],m=d[r],t){let t=32;e!==r&&(t=((h[0]!==m[0]?19136*(f[0]-h[0])/(m[0]-h[0]):0)+(h[1]!==m[1]?37568*(f[1]-h[1])/(m[1]-h[1]):0)+(h[2]!==m[2]?7296*(f[2]-h[2])/(m[2]-h[2]):0))/((h[0]!==m[0]?299:0)+(h[1]!==m[1]?587:0)+(h[2]!==m[2]?114:0)),t<0?t=0:t>63&&(t=63),t=~~t);const a=t/64;for(let t=0;t<3;t++)u[t]=h[t]+a*(m[t]-h[t]);const n=p(f,u,i[e*d.length+r],a-.5,o);n<l&&(l=n,w.color1=h,w.color2=m,w.ratio=a)}else for(let t=0;t<64&&!(e===r&&t>0);t++){const a=t/64;for(let t=0;t<3;t++)u[t]=h[t]+a*(m[t]-h[t]);const n=p(f,u,i[e*d.length+r],a-.5,o);n<l&&(l=n,w.color1=h,w.color2=m,w.ratio=a)}for(let t=0;t<3;t++)e.data[r+t]=a<w.ratio?w.color2[t]:w.color1[t];r%(4*c)==0&&n&&n(r,s,e)}return e}}const x={id:"ProcBayerLikeFast",name:"Ordered (Bayer-like) – Fast",procFn:w(),maxAllowedPaletteSize:192,supports:{threads:!0,gamma:!1},complexity:t=>t*t/2},A={id:"ProcBayerLikeThorough",name:"Ordered (Bayer-like) – High Quality",procFn:w(!1),maxAllowedPaletteSize:24,supports:{threads:!0,gamma:!1},complexity:t=>t*t*32},M={id:"ProcFloydSteinberg",name:"Floyd–Steinberg",procFn:(r,o,a,n,s)=>{const c=r.width*r.height*4,u=4*r.width,f=l.getColors(o);if(n.gamma){for(let e=0;e<c;e+=4){const o=t(Array.from(r.data.slice(e,e+3)));for(let t=0;t<3;t++)r.data[e+t]=o[t];e%(4*u)==0&&s&&s(e,c,r)}for(let e=0;e<f.length;e++)f[e]=t(f[e])}for(let t=0;t<c;t+=4){const o=Array.from(r.data.slice(t,t+3)),a=h(o,f,n.gamma?i:d);for(let o=0;o<3;o++)r.data[t+o]=(n.gamma?e(a):a)[o];const l=o.map(((t,e)=>t-a[e]));for(let e=0;e<3;e++)r.data[t+4+e]+=7*l[e]/16,r.data[t+u-4+e]+=3*l[e]/16,r.data[t+u+e]+=5*l[e]/16,r.data[t+u+4+e]+=1*l[e]/16;t%(4*u)==0&&s&&s(t,c,r)}return r},maxAllowedPaletteSize:65536,supports:{threads:!1,gamma:!0},complexity:t=>t};function I(t,e=2.2,r=!1){const o=[0,0,0];for(let a=0;a<3;a++)if(r){const r=t[a]<0?-1:1;o[a]=r*Math.pow(t[a]*r/255,e)}else o[a]=Math.pow(t[a]/255,e);return o}function y(t,e=2.2,r=!1){const o=1/e;if(r){const e=t<0?-1:1;return e*Math.pow(t*e,o)*255}return 255*Math.pow(t,o)}const E=[0,48,12,60,3,51,15,63,32,16,44,28,35,19,47,31,8,56,4,52,11,59,7,55,40,24,36,20,43,27,39,23,2,50,14,62,1,49,13,61,34,18,46,30,33,17,45,29,10,58,6,54,9,57,5,53,42,26,38,22,41,25,37,21].map((t=>t/64)),B={id:"ProcWeightedColorMap",name:"Ordered (Weighted Color Map)",procFn:(t,e,r,o,a)=>{const n=t.width*t.height*4,s=4*t.width,c=[];let d,i,u,f;const h=[0,0,0],m=l.getColors(e).map((t=>299*t[0]+587*t[1]+114*t[2])),g=l.getColors(o.gamma?l.transform(e,I):e);for(let p=0;p<n;p+=4){d=Array.from(t.data.slice(p,p+4));const w=p%s/4,x=~~(p/s);for(c.splice(0),u=[0,0,0];c.length<16;){let t=0,e=1,a=Number.MAX_VALUE;const n=c.length||1;for(let s=0;s<g.length;s++){i=[...g[s]],f=[...u];for(let l=1;l<=n;l*=2){const n=c.length+l;for(let t=0;t<3;t++)f[t]=u[t]+i[t]*l,h[t]=f[t]/n,o.gamma&&(h[t]=y(h[t]));const m=r(h,d);m<a&&(e=l,t=s,a=m)}}for(let r=0;r<e;r++)c.push(t);for(let r=0;r<3;r++)u[r]+=g[t][r]*e}c.sort(((t,e)=>m[t]-m[e]));const A=~~(E[w%8+x%8*8]*c.length);for(let r=0;r<3;r++)t.data[p+r]=l.getColor(e,c[A])[r];p%(4*s)==0&&a&&a(p,n,t)}return t},maxAllowedPaletteSize:256,supports:{threads:!0,gamma:!0},complexity:t=>384*t},P=self;var C;!function(t){t[t.Progress=0]="Progress",t[t.Done=1]="Done",t[t.Error=2]="Error"}(C||(C={}));const F=(t,e,r)=>{P.postMessage({msg:C.Progress,params:{current:t,total:e,partial:r}})};P.addEventListener("message",(t=>{const e=t.data,r=(t=>{switch(t){case m.id:return m;case M.id:return M;case x.id:return x;case A.id:return A;case B.id:return B;default:return null}})(e.procId);if(!r)return P.postMessage({msg:C.Error,params:{error:`WorkerInit failed: process ${e.procId} not found`}}),void self.close();const o=(t=>{switch(t){case"cdLab":return f;case"cdRGB":default:return d}})(e.distFnId);r.procFn(e.dataIn,e.palette,o,e.features,F),P.postMessage({msg:C.Done,params:{result:e.dataIn}}),self.close()}))})();